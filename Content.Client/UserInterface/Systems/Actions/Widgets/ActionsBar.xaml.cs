// SPDX-FileCopyrightText: 2022 DrSmugleaf <DrSmugleaf@users.noreply.github.com>
// SPDX-FileCopyrightText: 2022 Jezithyr <Jezithyr.@gmail.com>
// SPDX-FileCopyrightText: 2023 Leon Friedrich <60421075+ElectroJr@users.noreply.github.com>
// SPDX-FileCopyrightText: 2023 Nemanja <98561806+EmoGarbage404@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 yglop <95057024+yglop@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 taydeo <td12233a@gmail.com>
//
// SPDX-License-Identifier: MIT

using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Content.Client.UserInterface.Systems.Actions.Controls;
using Content.Shared.Input;

namespace Content.Client.UserInterface.Systems.Actions.Widgets;

[GenerateTypedNameReferences]
public sealed partial class ActionsBar : UIWidget
{
    // goobstation
    [Dependency] private readonly IEntityManager _entity = default!;

    public ActionsBar()
    {
        RobustXamlLoader.Load(this);
        // goobstation
        IoCManager.InjectDependencies(this);

        var keys = ContentKeyFunctions.GetHotbarBoundKeys();
        for (var index = 1; index < keys.Length; index++)
        {
            ActionsContainer.Children.Add(MakeButton(index));
        }
        ActionsContainer.Children.Add(MakeButton(0));

        ActionButton MakeButton(int index)
        {
            var boundKey = keys[index];
            var button = new ActionButton(_entity);
            button.KeyBind = boundKey;
            button.Label.Text = index.ToString();
            return button;
        }
    }
}

