// SPDX-FileCopyrightText: 2021 Leon Friedrich <60421075+ElectroJr@users.noreply.github.com>
// SPDX-FileCopyrightText: 2021 Watermelon914 <37270891+Watermelon914@users.noreply.github.com>
// SPDX-FileCopyrightText: 2022 Paul Ritter <ritter.paul1@googlemail.com>
// SPDX-FileCopyrightText: 2022 mirrorcult <lunarautomaton6@gmail.com>
// SPDX-FileCopyrightText: 2022 wrexbe <81056464+wrexbe@users.noreply.github.com>
// SPDX-FileCopyrightText: 2023 Vordenburg <114301317+Vordenburg@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Piras314 <p1r4s@proton.me>
// SPDX-FileCopyrightText: 2024 Tadeo <td12233a@gmail.com>
// SPDX-FileCopyrightText: 2024 eoineoineoin <github@eoinrul.es>
// SPDX-FileCopyrightText: 2024 osjarw <62134478+osjarw@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 Tay <td12233a@gmail.com>
// SPDX-FileCopyrightText: 2025 slarticodefast <161409025+slarticodefast@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 taydeo <td12233a@gmail.com>
//
// SPDX-License-Identifier: MIT

using Robust.Client.UserInterface.CustomControls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Labels.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class HandLabelerWindow : DefaultWindow
    {
        public event Action<string>? OnLabelChanged;

        /// <summary>
        /// Is the user currently entering text into the control?
        /// </summary>
        private bool _focused;
        // TODO LineEdit Make this a bool on the LineEdit control

        private string _label = string.Empty;

        public HandLabelerWindow()
        {
            RobustXamlLoader.Load(this);

            LabelLineEdit.OnTextChanged += e =>
            {
                _label = e.Text;
                OnLabelChanged?.Invoke(_label);
            };

            LabelLineEdit.OnFocusEnter += _ => _focused = true;
            LabelLineEdit.OnFocusExit += _ =>
            {
                _focused = false;
                LabelLineEdit.Text = _label;
            };
        }

        protected override void Opened()
        {
            base.Opened();
            
            // Give the editor keyboard focus, since that's the only
            // thing the user will want to be doing with this UI
            LabelLineEdit.GrabKeyboardFocus();
        }

        public void SetCurrentLabel(string label)
        {
            if (label == _label)
                return;

            _label = label;
            if (!_focused)
                LabelLineEdit.Text = label;
        }

        public void SetMaxLabelLength(int maxLength)
        {
            LabelLineEdit.IsValid = s => s.Length <= maxLength;
        }
    }
}
