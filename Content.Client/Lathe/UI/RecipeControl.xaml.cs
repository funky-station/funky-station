// SPDX-FileCopyrightText: 2023 Justin <justinly@usc.edu>
// SPDX-FileCopyrightText: 2023 metalgearsloth <31366439+metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Aiden <aiden@djkraz.com>
// SPDX-FileCopyrightText: 2024 Crotalus <Crotalus@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Nemanja <98561806+EmoGarbage404@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Plykiya <58439124+Plykiya@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 taydeo <td12233a@gmail.com>
//
// SPDX-License-Identifier: MIT

using Content.Shared.Research.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Lathe.UI;

[GenerateTypedNameReferences]
public sealed partial class RecipeControl : Control
{
    public Action<string>? OnButtonPressed;
    public Func<string> TooltipTextSupplier;

    public RecipeControl(LatheSystem latheSystem, LatheRecipePrototype recipe, Func<string> tooltipTextSupplier, bool canProduce, Control displayControl)
    {
        RobustXamlLoader.Load(this);

        RecipeName.Text = latheSystem.GetRecipeName(recipe);
        RecipeDisplayContainer.AddChild(displayControl);
        Button.Disabled = !canProduce;
        TooltipTextSupplier = tooltipTextSupplier;
        Button.TooltipSupplier = SupplyTooltip;

        Button.OnPressed += (_) =>
        {
            OnButtonPressed?.Invoke(recipe.ID);
        };
    }

    private Control? SupplyTooltip(Control sender)
    {
        return new RecipeTooltip(TooltipTextSupplier());
    }
}
